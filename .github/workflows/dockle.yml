name: Dockle

on:
  push:
    branches:
      - master
      - develop
      - develop-mame
  pull_request:

permissions: {}

jobs:
  dockle:
    runs-on: ubuntu-latest

    permissions:
      contents: read

    env:
      DOCKER_CONTENT_TRUST: 1
      DOCKLE_VERSION: 0.4.14

    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1
      - name: Download and install dockle v${{ env.DOCKLE_VERSION }}
        run: |
          curl -L -o dockle.deb "https://github.com/goodwithtech/dockle/releases/download/v${DOCKLE_VERSION}/dockle_${DOCKLE_VERSION}_Linux-64bit.deb"
          sudo dpkg -i dockle.deb
      - name: Copy config files
        run: |
          cp .config/docker_example.env .config/docker.env
          cp ./compose_example.yml ./compose.yml
      - name: Restore docker images cache
        id: docker-images-cache
        uses: actions/cache@v4
        with:
          path: dockle-docker-images
          key: dockle-docker-images-${{ github.ref_name }}-${{ github.sha }}
          restore-keys: dockle-docker-images-
      - name: Pull and save docker images
        if: steps.docker-images-cache.outputs.cache-hit != 'true'
        run: |
          docker pull redis:7-alpine
          docker pull postgres:15-alpine
          docker pull node:20.16.0-bullseye-slim
          docker pull node:20.16.0-bullseye
          docker save -o dockle-docker-images redis:7-alpine postgres:15-alpine node:20.16.0-bullseye-slim node:20.16.0-bullseye
      - name: Load docker images from cache
        run: docker load -i dockle-docker-images
      - name: Run container
        run: docker compose up -d web
      - name: Tagging
        run: docker tag "$(docker compose images web | awk 'OFS=":" {print $4}' | tail -n +2)" misskey-web:latest
      - name: Run dockle
        run: |
          cmd="dockle --exit-code 1 misskey-web:latest ${image_name}"
          echo "> ${cmd}"
          eval "${cmd}"
